Перем ПарсерСоединений;
Перем Маршрутизатор;
Перем ФабрикаОтветов;
Перем ОтправщикОтветов;
Перем МенеджерСессий;
Перем МенеджерОтображений;
Перем МенеджерДоступа;
Перем Парсеры;

&Желудь
Процедура ПриСозданииОбъекта(
							&Пластилин("ПарсерСоединений") _ПарсерСоединений,
							&Пластилин("Маршрутизатор") _Маршрутизатор,
							&Пластилин("ФабрикаОтветов") _ФабрикаОтветов,
							&Пластилин("ОтправщикОтветов") _ОтправщикОтветов,
							&Пластилин("МенеджерСессий") _МенеджерСессий,
							&Пластилин("МенеджерОтображений") _МенеджерОтображений,
							&Пластилин("МенеджерДоступа") _МенеджерДоступа,
							&Пластилин("Парсеры") _Парсеры
							)
	ПарсерСоединений = _ПарсерСоединений;
	Маршрутизатор = _Маршрутизатор;
	ФабрикаОтветов = _ФабрикаОтветов;
	ОтправщикОтветов = _ОтправщикОтветов;
	МенеджерСессий = _МенеджерСессий;
	МенеджерОтображений = _МенеджерОтображений;
	МенеджерДоступа = _МенеджерДоступа;
	Парсеры = _Парсеры;
КонецПроцедуры

Процедура Обработать(Соединение) Экспорт

	Запрос = ПарсерСоединений.ПолучитьЗапрос(Соединение);	

	ОбработчикИПараметры = Маршрутизатор.НайтиОбработчикИПараметрыПоПолномуПути(Запрос.Путь);

	Запрос.ПараметрыПорядковые = ОбработчикИПараметры.Параметры;

	Если ЗначениеЗаполнено(ОбработчикИПараметры.Действие) Тогда

		Сессия = ПолучитьСессию(Запрос.Куки);

		ДействиеДоступно = Ложь;
		ЗапроситьТокен = Ложь;
		
		Если МенеджерДоступа.ТочкаМаршрутаИмеетРоли(ОбработчикИПараметры.Действие) Тогда
			Если ЗначениеЗаполнено(Сессия.Логин) и МенеджерДоступа.ТочкаМаршрутаДоступна(Сессия.Логин, ОбработчикИПараметры.Действие) Тогда
				ДействиеДоступно = Истина;	

			ИначеЕсли ЗначениеЗаполнено(Сессия.Логин) и НЕ МенеджерДоступа.ТочкаМаршрутаДоступна(Сессия.Логин, ОбработчикИПараметры.Действие) Тогда
				ДействиеДоступно = Ложь;

			ИначеЕсли НЕ ЗначениеЗаполнено(Сессия.Логин) И Запрос.Заголовки["Authorization"] = Неопределено Тогда
				ДействиеДоступно = Ложь;
				ЗапроситьТокен = Истина;

			ИначеЕсли НЕ ЗначениеЗаполнено(Сессия.Логин) И НЕ Запрос.Заголовки["Authorization"] = Неопределено Тогда
				ДанныеАвторизации = РазобратьАвторизационныеДанные(Запрос.Заголовки["Authorization"]);

				Если ЗначениеЗаполнено(ДанныеАвторизации.Логин) И
						ЗначениеЗаполнено(ДанныеАвторизации.Токен) Тогда

					Если МенеджерДоступа.ТокенВалидный(ДанныеАвторизации.Логин, ДанныеАвторизации.Токен) Тогда
						Сессия.Логин = ДанныеАвторизации.Логин;
						ДействиеДоступно = МенеджерДоступа.ТочкаМаршрутаДоступна(Сессия.Логин, ОбработчикИПараметры.Действие);
					Иначе
						ДействиеДоступно = Ложь;
						ЗапроситьТокен = Истина;
					КонецЕсли;
				Иначе 
					ДействиеДоступно = Ложь;
					ЗапроситьТокен = Истина;
				
				КонецЕсли

			КонецЕсли;
		Иначе
			ДействиеДоступно = Истина;
		КонецЕсли;

		Если ДействиеДоступно Тогда
			Ответ = АвторизованныйОтвет(Запрос, Сессия, ОбработчикИПараметры);
		ИначеЕсли Не ДействиеДоступно и ЗапроситьТокен Тогда
			Ответ = ФабрикаОтветов.НовыйОтвет401();
			Ответ.Заголовки["WWW-Authenticate"] = "Basic";
		Иначе
			Ответ = ФабрикаОтветов.НовыйОтвет403();
		КонецЕсли;

	Иначе

		Ответ = ФабрикаОтветов.НовыйОтвет404();
		Ответ.Модель = Новый Структура();
		Ответ.Модель.Вставить("КодСостояния", 404);
		Ответ.Модель.Вставить("ТекстСообщения", "Страница не найдена");
		Ответ.Модель.Вставить("Запрос", Запрос);
		Ответ.ОбработатьМодель();

	КонецЕсли;

	ОтправщикОтветов.ОтправитьОтвет(Ответ, Соединение);

	Соединение.Закрыть();

КонецПроцедуры

Функция РазобратьАвторизационныеДанные(знач СтрокаЗаголовкаАвторизациии)

	СтрокаЗаголовкаАвторизациии = СокрЛП(СтрокаЗаголовкаАвторизациии);
	Результат = Новый Структура("Логин, Токен", "", "");

	Если СтрНачинаетсяС(СтрокаЗаголовкаАвторизациии, "Basic") Тогда
		СтрокаАвторизации = ПолучитьСтрокуИзДвоичныхДанных(Base64Значение(СтрЗаменить(СтрокаЗаголовкаАвторизациии, "Basic ", "")));
		Разделенные = Парсеры.РазделитьСтроку(СтрокаАвторизации, ":");
		Результат.Логин = СокрЛП(Разделенные.Лево);
		Результат.Токен = СокрЛП(Разделенные.Право);
	КонецЕсли;

	Возврат Результат;
КонецФункции

Функция АвторизованныйОтвет(Запрос, Сессия, ОбработчикИПараметры)

	Ответ = ФабрикаОтветов.НовыйОтвет();
	Ответ.Куки.Добавить(ИмяКукаСессии(), Сессия.Идентификатор());

	Отображене = МенеджерОтображений.ПолучитьОтображениеДействия(ОбработчикИПараметры.Действие);
	Если ЗначениеЗаполнено(Отображене) Тогда
		Ответ.УстановитьТекстШаблона(Отображене);
	КонецЕсли;

	Попытка
		ОбработчикИПараметры.Действие.Выполнить(Запрос, Ответ, Сессия);	
		Ответ.ОбработатьМодель();
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Ответ = ФабрикаОтветов.НовыйОтвет500();
		Ответ.Модель = Новый Структура();
		Ответ.Модель.Вставить("КодСостояния", 500);
		Ответ.Модель.Вставить("ТекстСообщения", ТекстОшибки);
		Ответ.Модель.Вставить("Запрос", Запрос);
		Ответ.ОбработатьМодель();
	КонецПопытки;	

	Возврат Ответ;

КонецФункции

Функция ПолучитьСессию(Куки)
	ИдСессии = Куки.ПолучитьЗначениеПоИмени(ИмяКукаСессии());
	Возврат МенеджерСессий.ПолучитьСессиюПоИдентификатору(ИдСессии);
КонецФункции

Функция ИмяКукаСессии()
	Возврат "SessionID";
КонецФункции